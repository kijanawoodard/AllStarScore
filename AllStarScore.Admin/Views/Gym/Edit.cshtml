@model AllStarScore.Models.Commands.GymEditCommand

@{ Html.RegisterStylesheet("~/content/styles/gym.edit.css"); }
@{ Html.RegisterScript("~/content/scripts/gym.edit.js"); }

<div id="gym_edit">
    <form action='@Url.Action("Edit", "Gym")' method="post" data-bind="css: {show: shouldShowForm}">
        <fieldset data-bind="visible: editing">
            <legend>Edit a Gym</legend>
            
            <div class="validation-summary-errors"></div>

            <input type="hidden" data-bind="value: post.gymId" />

            <div class="editor-label">
                <label>Gym Name</label>
            </div>
            <div class="editor-field">
                <input type="text" name="gymName" class="required" data-bind="value: post.gymName, hasfocus: focusName, autocomplete : { source: gyms, onMatchEval: gymNameMatched }" />
                <span data-bind="visible: nameIsAvailable">This gym name is available</span>
                <span data-bind="visible: nameIsTaken">This gym name is taken</span>
            </div>

            <div class="editor-label">
                <label>Location</label>
            </div>
            <div class="editor-field">
                <input type="text" name="location" class="required" data-bind="value: post.location" />
            </div>

            <div class="editor-label">
                <label>Small Gym?</label>
            </div>
            <div class="editor-field">
                <input type="checkbox" name="isSmallGym" data-bind="checked: post.isSmallGym" />
            </div>

            <p>
                <a href="#" data-bind="click: cancel">Cancel</a>
                <input type="submit" value="Save" data-bind="enable: shouldAllowName" />
            </p>
        </fieldset>
        
        <p data-bind="visible: !editing()">
            <span data-bind="text: post.gymName"></span> from
            <span data-bind="text: post.location"></span> (
            <span data-bind="visible: post.isSmallGym">Small Gym</span>
            <span data-bind="visible: !post.isSmallGym()">Large Gym</span>
             ) 
            <a href="#" data-bind="click: edit">Edit</a>
        </p>
    </form>
    
</div>

@{ Html.RenderAction("GymList", "Gym"); }

<script>
    var gymEditData = {
        gym: NormalizeLineEndings('@Html.Raw(Model.ToJson())')
    };
</script>